<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>The Weather Forecasting</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <div class="container">
    <h1>THE WEATHER FORECASTING</h1>
    <div class="search">
      <input type="text" id="city-input" placeholder="Enter city name" />
      <button onclick="getWeather()">Get Weather</button>
    </div>

    <div class="weather-wrapper">
      <div id="current-weather" class="section"></div>
      <div class="air-wrapper">
        <h2 class="airhead">Air Conditions</h2>
        <div id="air-conditions" class="conditions"></div>
      </div>
    </div>
    

    

    <h2>Weekly Forecast</h2>
    <div id="weekly-forecast" class="forecast-row"></div>
  </div>

  <script src="script.js"></script>
</body>
</html>




css


body {
  margin: 0;
  padding: 0;
  font-family: 'Segoe UI', sans-serif;
  background: linear-gradient(to bottom, #031e39, #063c6b);
  color: white;
}

.container {
  max-width: 1000px;
  margin: 30px auto;
  padding: 20px;
  background: #0b2a47;
  border-radius: 15px;
  box-shadow: 0 0 20px #00000055;
}

h1, h2 {
  text-align: center;
  margin-bottom: 15px;
}

.search {
  display: flex;
  justify-content: center;
  margin-bottom: 30px;
}

.search input {
  padding: 10px;
  width: 300px;
  border-radius: 8px 0 0 8px;
  border: none;
  font-size: 16px;
}

.search button {
  padding: 10px;
  background: #2196f3;
  color: white;
  border: none;
  font-size: 16px;
  border-radius: 0 8px 8px 0;
  cursor: pointer;
}

.section {
  text-align: center;
  margin-bottom: 30px;
}

.location-time h2 {
  margin: 10px 0;
}

.temperature-icon img {
  width: 80px;
}

.conditions {
  display: flex;
  justify-content: space-around;
  margin-bottom: 30px;
  flex-wrap: wrap;
}

.condition {
  margin: 10px;
  font-size: 18px;
}

.forecast-row {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  gap: 15px;
  margin-bottom: 30px;
}

.forecast-card {
  background: #16436e;
  padding: 15px;
  border-radius: 10px;
  width: 130px;
  text-align: center;
  box-shadow: 0 0 8px #00000033;
}

.forecast-card img {
  width: 50px;
}

/* Combine current weather and air conditions side by side */
#current-weather,
#air-conditions {
  display: inline-block;
  vertical-align: top;
  width: 48%;
}

#current-weather {
  text-align: center;
}

.airhead{
  vertical-align: top;

}

#air-conditions {
  padding-left: 20px;
  font-size: 18px;
}

.condition {
  margin: 10px 0;
}

/* Forecast section: make cards scroll horizontally */
.forecast-row {
  display: flex;
  overflow-x: auto;
  gap: 15px;
  padding-bottom: 10px;
}

.forecast-row::-webkit-scrollbar {
  height: 8px;
}

.forecast-row::-webkit-scrollbar-thumb {
  background-color: #888;
  border-radius: 4px;
}

/* Prevent forecast cards from wrapping and shrinking */
.forecast-card {
  flex: 0 0 auto;
}
@media (max-width: 768px) {
  #current-weather,
  #air-conditions {
    display: block;
    width: 100%;
    padding: 0;
  }
}

.weather-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 30px;
  margin-bottom: 30px;
}

.weather-wrapper > div {
  flex: 1;
  min-width: 320px;
}



.air-wrapper {
  padding-top: 20px;
  text-align: center;
}

.forecast-row {
  display: flex;
  justify-content: space-between;
  gap: 15px;
  overflow-x: auto;
  padding-bottom: 10px;
}
.forecast-card {
  flex: 0 0 120px; /* Fixed width */
  background: #16436e;
  padding: 15px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 0 8px #00000033;
}




js


const apiKey = "0e54a07e203e4caa9364e27ceb70fc67";

async function getWeather() {
  const city = document.getElementById("city-input").value;
  if (!city) return alert("Please enter a city name");

  const currentUrl = `https://api.weatherbit.io/v2.0/current?city=${city}&key=${apiKey}`;
  const forecastUrl = `https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&days=7&key=${apiKey}`;
  const hourlyUrl = `https://api.weatherbit.io/v2.0/forecast/hourly?city=${city}&hours=6&key=${apiKey}`;

  try {
    const [currentRes, forecastRes, hourlyRes] = await Promise.all([
      fetch(currentUrl),
      fetch(forecastUrl),
      fetch(hourlyUrl),
    ]);

    const currentData = (await currentRes.json()).data[0];
    const forecastData = (await forecastRes.json()).data;
    const hourlyData = (await hourlyRes.json()).data;

    displayCurrent(currentData, city);
    displayForecast(forecastData);
    displayHourly(hourlyData);
  } catch (err) {
    console.error(err);
    alert("Failed to fetch weather data. Check city name or API key.");
  }
}

function displayCurrent(data, city) {
  document.getElementById("current-weather").innerHTML = `
    <div class="location-time">
      <h2>${city.toUpperCase()}</h2>
      <p>${new Date(data.ob_time).toUTCString()}</p>
    </div>
    <div class="temperature-icon">
      <h1>${data.temp}°C</h1>
      <img src="https://www.weatherbit.io/static/img/icons/${data.weather.icon}.png" alt="weather icon">
      <p>${data.weather.description}</p>
    </div>
  `;
  document.getElementById("air-conditions").innerHTML = `
    <div class="condition"><span>🌡</span> Real Feel: ${data.app_temp}°C</div>
    <div class="condition"><span>💨</span> Wind: ${data.wind_spd.toFixed(2)} m/s</div>
    <div class="condition"><span>☁️</span> Clouds: ${data.clouds}%</div>
    <div class="condition"><span>💧</span> Humidity: ${data.rh}%</div>
  `;
}

function displayForecast(data) {
  const forecastContainer = document.getElementById("weekly-forecast");
  forecastContainer.innerHTML = "";
  data.forEach(day => {
    const card = document.createElement("div");
    card.className = "forecast-card";
    card.innerHTML = `
      <h4>${new Date(day.datetime).toLocaleDateString(undefined, { weekday: 'long' })}</h4>
      <img src="https://www.weatherbit.io/static/img/icons/${day.weather.icon}.png" alt="icon">
      <p>${day.weather.description}</p>
      <p>🌡 ${day.temp}°C</p>
      <p>💧 ${day.rh}%</p>
      <p>💨 ${day.wind_spd.toFixed(2)} m/s</p>
    `;
    forecastContainer.appendChild(card);
  });
}

function displayHourly(data) {
  const hourlyContainer = document.getElementById("hourly-forecast");
  hourlyContainer.innerHTML = "";
  data.forEach(hour => {
    const card = document.createElement("div");
    card.className = "forecast-card";
    card.innerHTML = `
      <h4>${hour.timestamp_local.slice(11, 16)}</h4>
      <img src="https://www.weatherbit.io/static/img/icons/${hour.weather.icon}.png" alt="icon">
      <p>${hour.weather.description}</p>
      <p>🌡 ${hour.temp}°C</p>
    `;
    hourlyContainer.appendChild(card);
  });
}
